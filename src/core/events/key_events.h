#pragma once

#include "core/events/events_base.h"

enum Scancode {
  SCANCODE_UNKNOWN = 0,

  /**
   *  \name Usage page 0x07
   *
   *  These values are from usage page 0x07 (USB keyboard page).
   */
  /* @{ */

  SCANCODE_A = 4,
  SCANCODE_B = 5,
  SCANCODE_C = 6,
  SCANCODE_D = 7,
  SCANCODE_E = 8,
  SCANCODE_F = 9,
  SCANCODE_G = 10,
  SCANCODE_H = 11,
  SCANCODE_I = 12,
  SCANCODE_J = 13,
  SCANCODE_K = 14,
  SCANCODE_L = 15,
  SCANCODE_M = 16,
  SCANCODE_N = 17,
  SCANCODE_O = 18,
  SCANCODE_P = 19,
  SCANCODE_Q = 20,
  SCANCODE_R = 21,
  SCANCODE_S = 22,
  SCANCODE_T = 23,
  SCANCODE_U = 24,
  SCANCODE_V = 25,
  SCANCODE_W = 26,
  SCANCODE_X = 27,
  SCANCODE_Y = 28,
  SCANCODE_Z = 29,

  SCANCODE_1 = 30,
  SCANCODE_2 = 31,
  SCANCODE_3 = 32,
  SCANCODE_4 = 33,
  SCANCODE_5 = 34,
  SCANCODE_6 = 35,
  SCANCODE_7 = 36,
  SCANCODE_8 = 37,
  SCANCODE_9 = 38,
  SCANCODE_0 = 39,

  SCANCODE_RETURN = 40,
  SCANCODE_ESCAPE = 41,
  SCANCODE_BACKSPACE = 42,
  SCANCODE_TAB = 43,
  SCANCODE_SPACE = 44,

  SCANCODE_MINUS = 45,
  SCANCODE_EQUALS = 46,
  SCANCODE_LEFTBRACKET = 47,
  SCANCODE_RIGHTBRACKET = 48,
  SCANCODE_BACKSLASH = 49, /**< Located at the lower left of the return
                                *   key on ISO keyboards and at the right end
                                *   of the QWERTY row on ANSI keyboards.
                                *   Produces REVERSE SOLIDUS (backslash) and
                                *   VERTICAL LINE in a US layout, REVERSE
                                *   SOLIDUS and VERTICAL LINE in a UK Mac
                                *   layout, NUMBER SIGN and TILDE in a UK
                                *   Windows layout, DOLLAR SIGN and POUND SIGN
                                *   in a Swiss German layout, NUMBER SIGN and
                                *   APOSTROPHE in a German layout, GRAVE
                                *   ACCENT and POUND SIGN in a French Mac
                                *   layout, and ASTERISK and MICRO SIGN in a
                                *   French Windows layout.
                                */
  SCANCODE_NONUSHASH = 50, /**< ISO USB keyboards actually use this code
                                *   instead of 49 for the same key, but all
                                *   OSes I've seen treat the two codes
                                *   identically. So, as an implementor, unless
                                *   your keyboard generates both of those
                                *   codes and your OS treats them differently,
                                *   you should generate SCANCODE_BACKSLASH
                                *   instead of this code. As a user, you
                                *   should not rely on this code because SDL
                                *   will never generate it with most (all?)
                                *   keyboards.
                                */
  SCANCODE_SEMICOLON = 51,
  SCANCODE_APOSTROPHE = 52,
  SCANCODE_GRAVE = 53, /**< Located in the top left corner (on both ANSI
                            *   and ISO keyboards). Produces GRAVE ACCENT and
                            *   TILDE in a US Windows layout and in US and UK
                            *   Mac layouts on ANSI keyboards, GRAVE ACCENT
                            *   and NOT SIGN in a UK Windows layout, SECTION
                            *   SIGN and PLUS-MINUS SIGN in US and UK Mac
                            *   layouts on ISO keyboards, SECTION SIGN and
                            *   DEGREE SIGN in a Swiss German layout (Mac:
                            *   only on ISO keyboards), CIRCUMFLEX ACCENT and
                            *   DEGREE SIGN in a German layout (Mac: only on
                            *   ISO keyboards), SUPERSCRIPT TWO and TILDE in a
                            *   French Windows layout, COMMERCIAL AT and
                            *   NUMBER SIGN in a French Mac layout on ISO
                            *   keyboards, and LESS-THAN SIGN and GREATER-THAN
                            *   SIGN in a Swiss German, German, or French Mac
                            *   layout on ANSI keyboards.
                            */
  SCANCODE_COMMA = 54,
  SCANCODE_PERIOD = 55,
  SCANCODE_SLASH = 56,

  SCANCODE_CAPSLOCK = 57,

  SCANCODE_F1 = 58,
  SCANCODE_F2 = 59,
  SCANCODE_F3 = 60,
  SCANCODE_F4 = 61,
  SCANCODE_F5 = 62,
  SCANCODE_F6 = 63,
  SCANCODE_F7 = 64,
  SCANCODE_F8 = 65,
  SCANCODE_F9 = 66,
  SCANCODE_F10 = 67,
  SCANCODE_F11 = 68,
  SCANCODE_F12 = 69,

  SCANCODE_PRINTSCREEN = 70,
  SCANCODE_SCROLLLOCK = 71,
  SCANCODE_PAUSE = 72,
  SCANCODE_INSERT = 73, /**< insert on PC, help on some Mac keyboards (but
                                 does send code 73, not 117) */
  SCANCODE_HOME = 74,
  SCANCODE_PAGEUP = 75,
  SCANCODE_DELETE = 76,
  SCANCODE_END = 77,
  SCANCODE_PAGEDOWN = 78,
  SCANCODE_RIGHT = 79,
  SCANCODE_LEFT = 80,
  SCANCODE_DOWN = 81,
  SCANCODE_UP = 82,

  SCANCODE_NUMLOCKCLEAR = 83, /**< num lock on PC, clear on Mac keyboards
                                   */
  SCANCODE_KP_DIVIDE = 84,
  SCANCODE_KP_MULTIPLY = 85,
  SCANCODE_KP_MINUS = 86,
  SCANCODE_KP_PLUS = 87,
  SCANCODE_KP_ENTER = 88,
  SCANCODE_KP_1 = 89,
  SCANCODE_KP_2 = 90,
  SCANCODE_KP_3 = 91,
  SCANCODE_KP_4 = 92,
  SCANCODE_KP_5 = 93,
  SCANCODE_KP_6 = 94,
  SCANCODE_KP_7 = 95,
  SCANCODE_KP_8 = 96,
  SCANCODE_KP_9 = 97,
  SCANCODE_KP_0 = 98,
  SCANCODE_KP_PERIOD = 99,

  SCANCODE_NONUSBACKSLASH = 100, /**< This is the additional key that ISO
                                      *   keyboards have over ANSI ones,
                                      *   located between left shift and Y.
                                      *   Produces GRAVE ACCENT and TILDE in a
                                      *   US or UK Mac layout, REVERSE SOLIDUS
                                      *   (backslash) and VERTICAL LINE in a
                                      *   US or UK Windows layout, and
                                      *   LESS-THAN SIGN and GREATER-THAN SIGN
                                      *   in a Swiss German, German, or French
                                      *   layout. */
  SCANCODE_APPLICATION = 101,    /**< windows contextual menu, compose */
  SCANCODE_POWER = 102,          /**< The USB document says this is a status flag,
                                      *   not a physical key - but some Mac keyboards
                                      *   do have a power key. */
  SCANCODE_KP_EQUALS = 103,
  SCANCODE_F13 = 104,
  SCANCODE_F14 = 105,
  SCANCODE_F15 = 106,
  SCANCODE_F16 = 107,
  SCANCODE_F17 = 108,
  SCANCODE_F18 = 109,
  SCANCODE_F19 = 110,
  SCANCODE_F20 = 111,
  SCANCODE_F21 = 112,
  SCANCODE_F22 = 113,
  SCANCODE_F23 = 114,
  SCANCODE_F24 = 115,
  SCANCODE_EXECUTE = 116,
  SCANCODE_HELP = 117,
  SCANCODE_MENU = 118,
  SCANCODE_SELECT = 119,
  SCANCODE_STOP = 120,
  SCANCODE_AGAIN = 121, /**< redo */
  SCANCODE_UNDO = 122,
  SCANCODE_CUT = 123,
  SCANCODE_COPY = 124,
  SCANCODE_PASTE = 125,
  SCANCODE_FIND = 126,
  SCANCODE_MUTE = 127,
  SCANCODE_VOLUMEUP = 128,
  SCANCODE_VOLUMEDOWN = 129,
  /* not sure whether there's a reason to enable these */
  /*     SCANCODE_LOCKINGCAPSLOCK = 130,  */
  /*     SCANCODE_LOCKINGNUMLOCK = 131, */
  /*     SCANCODE_LOCKINGSCROLLLOCK = 132, */
  SCANCODE_KP_COMMA = 133,
  SCANCODE_KP_EQUALSAS400 = 134,

  SCANCODE_INTERNATIONAL1 = 135, /**< used on Asian keyboards, see
                                          footnotes in USB doc */
  SCANCODE_INTERNATIONAL2 = 136,
  SCANCODE_INTERNATIONAL3 = 137, /**< Yen */
  SCANCODE_INTERNATIONAL4 = 138,
  SCANCODE_INTERNATIONAL5 = 139,
  SCANCODE_INTERNATIONAL6 = 140,
  SCANCODE_INTERNATIONAL7 = 141,
  SCANCODE_INTERNATIONAL8 = 142,
  SCANCODE_INTERNATIONAL9 = 143,
  SCANCODE_LANG1 = 144, /**< Hangul/English toggle */
  SCANCODE_LANG2 = 145, /**< Hanja conversion */
  SCANCODE_LANG3 = 146, /**< Katakana */
  SCANCODE_LANG4 = 147, /**< Hiragana */
  SCANCODE_LANG5 = 148, /**< Zenkaku/Hankaku */
  SCANCODE_LANG6 = 149, /**< reserved */
  SCANCODE_LANG7 = 150, /**< reserved */
  SCANCODE_LANG8 = 151, /**< reserved */
  SCANCODE_LANG9 = 152, /**< reserved */

  SCANCODE_ALTERASE = 153, /**< Erase-Eaze */
  SCANCODE_SYSREQ = 154,
  SCANCODE_CANCEL = 155,
  SCANCODE_CLEAR = 156,
  SCANCODE_PRIOR = 157,
  SCANCODE_RETURN2 = 158,
  SCANCODE_SEPARATOR = 159,
  SCANCODE_OUT = 160,
  SCANCODE_OPER = 161,
  SCANCODE_CLEARAGAIN = 162,
  SCANCODE_CRSEL = 163,
  SCANCODE_EXSEL = 164,

  SCANCODE_KP_00 = 176,
  SCANCODE_KP_000 = 177,
  SCANCODE_THOUSANDSSEPARATOR = 178,
  SCANCODE_DECIMALSEPARATOR = 179,
  SCANCODE_CURRENCYUNIT = 180,
  SCANCODE_CURRENCYSUBUNIT = 181,
  SCANCODE_KP_LEFTPAREN = 182,
  SCANCODE_KP_RIGHTPAREN = 183,
  SCANCODE_KP_LEFTBRACE = 184,
  SCANCODE_KP_RIGHTBRACE = 185,
  SCANCODE_KP_TAB = 186,
  SCANCODE_KP_BACKSPACE = 187,
  SCANCODE_KP_A = 188,
  SCANCODE_KP_B = 189,
  SCANCODE_KP_C = 190,
  SCANCODE_KP_D = 191,
  SCANCODE_KP_E = 192,
  SCANCODE_KP_F = 193,
  SCANCODE_KP_XOR = 194,
  SCANCODE_KP_POWER = 195,
  SCANCODE_KP_PERCENT = 196,
  SCANCODE_KP_LESS = 197,
  SCANCODE_KP_GREATER = 198,
  SCANCODE_KP_AMPERSAND = 199,
  SCANCODE_KP_DBLAMPERSAND = 200,
  SCANCODE_KP_VERTICALBAR = 201,
  SCANCODE_KP_DBLVERTICALBAR = 202,
  SCANCODE_KP_COLON = 203,
  SCANCODE_KP_HASH = 204,
  SCANCODE_KP_SPACE = 205,
  SCANCODE_KP_AT = 206,
  SCANCODE_KP_EXCLAM = 207,
  SCANCODE_KP_MEMSTORE = 208,
  SCANCODE_KP_MEMRECALL = 209,
  SCANCODE_KP_MEMCLEAR = 210,
  SCANCODE_KP_MEMADD = 211,
  SCANCODE_KP_MEMSUBTRACT = 212,
  SCANCODE_KP_MEMMULTIPLY = 213,
  SCANCODE_KP_MEMDIVIDE = 214,
  SCANCODE_KP_PLUSMINUS = 215,
  SCANCODE_KP_CLEAR = 216,
  SCANCODE_KP_CLEARENTRY = 217,
  SCANCODE_KP_BINARY = 218,
  SCANCODE_KP_OCTAL = 219,
  SCANCODE_KP_DECIMAL = 220,
  SCANCODE_KP_HEXADECIMAL = 221,

  SCANCODE_LCTRL = 224,
  SCANCODE_LSHIFT = 225,
  SCANCODE_LALT = 226, /**< alt, option */
  SCANCODE_LGUI = 227, /**< windows, command (apple), meta */
  SCANCODE_RCTRL = 228,
  SCANCODE_RSHIFT = 229,
  SCANCODE_RALT = 230, /**< alt gr, option */
  SCANCODE_RGUI = 231, /**< windows, command (apple), meta */

  SCANCODE_MODE = 257, /**< I'm not sure if this is really not covered
                            *   by any of the above, but since there's a
                            *   special KMOD_MODE for it I'm adding it here
                            */

  /* @} */ /* Usage page 0x07 */

  /**
   *  \name Usage page 0x0C
   *
   *  These values are mapped from usage page 0x0C (USB consumer page).
   */
  /* @{ */

  SCANCODE_AUDIONEXT = 258,
  SCANCODE_AUDIOPREV = 259,
  SCANCODE_AUDIOSTOP = 260,
  SCANCODE_AUDIOPLAY = 261,
  SCANCODE_AUDIOMUTE = 262,
  SCANCODE_MEDIASELECT = 263,
  SCANCODE_WWW = 264,
  SCANCODE_MAIL = 265,
  SCANCODE_CALCULATOR = 266,
  SCANCODE_COMPUTER = 267,
  SCANCODE_AC_SEARCH = 268,
  SCANCODE_AC_HOME = 269,
  SCANCODE_AC_BACK = 270,
  SCANCODE_AC_FORWARD = 271,
  SCANCODE_AC_STOP = 272,
  SCANCODE_AC_REFRESH = 273,
  SCANCODE_AC_BOOKMARKS = 274,

  /* @} */ /* Usage page 0x0C */

  /**
   *  \name Walther keys
   *
   *  These are values that Christian Walther added (for mac keyboard?).
   */
  /* @{ */

  SCANCODE_BRIGHTNESSDOWN = 275,
  SCANCODE_BRIGHTNESSUP = 276,
  SCANCODE_DISPLAYSWITCH = 277, /**< display mirroring/dual display
                                         switch, video mode switch */
  SCANCODE_KBDILLUMTOGGLE = 278,
  SCANCODE_KBDILLUMDOWN = 279,
  SCANCODE_KBDILLUMUP = 280,
  SCANCODE_EJECT = 281,
  SCANCODE_SLEEP = 282,

  SCANCODE_APP1 = 283,
  SCANCODE_APP2 = 284,

  /* @} */ /* Walther keys */

  /* Add any other keys here. */

  NUM_SCANCODES = 512 /**< not a key, just marks the number of scancodes
                               for array bounds */
};

#define FASTO_KEY_SCANCODE_MASK (1 << 30)
#define SCANCODE_TO_KEYCODE(X) (X | FASTO_KEY_SCANCODE_MASK)

enum {
  FASTO_KEY_UNKNOWN = 0,

  FASTO_KEY_RETURN = '\r',
  FASTO_KEY_ESCAPE = '\033',
  FASTO_KEY_BACKSPACE = '\b',
  FASTO_KEY_TAB = '\t',
  FASTO_KEY_SPACE = ' ',
  FASTO_KEY_EXCLAIM = '!',
  FASTO_KEY_QUOTEDBL = '"',
  FASTO_KEY_HASH = '#',
  FASTO_KEY_PERCENT = '%',
  FASTO_KEY_DOLLAR = '$',
  FASTO_KEY_AMPERSAND = '&',
  FASTO_KEY_QUOTE = '\'',
  FASTO_KEY_LEFTPAREN = '(',
  FASTO_KEY_RIGHTPAREN = ')',
  FASTO_KEY_ASTERISK = '*',
  FASTO_KEY_PLUS = '+',
  FASTO_KEY_COMMA = ',',
  FASTO_KEY_MINUS = '-',
  FASTO_KEY_PERIOD = '.',
  FASTO_KEY_SLASH = '/',
  FASTO_KEY_0 = '0',
  FASTO_KEY_1 = '1',
  FASTO_KEY_2 = '2',
  FASTO_KEY_3 = '3',
  FASTO_KEY_4 = '4',
  FASTO_KEY_5 = '5',
  FASTO_KEY_6 = '6',
  FASTO_KEY_7 = '7',
  FASTO_KEY_8 = '8',
  FASTO_KEY_9 = '9',
  FASTO_KEY_COLON = ':',
  FASTO_KEY_SEMICOLON = ';',
  FASTO_KEY_LESS = '<',
  FASTO_KEY_EQUALS = '=',
  FASTO_KEY_GREATER = '>',
  FASTO_KEY_QUESTION = '?',
  FASTO_KEY_AT = '@',
  /*
     Skip uppercase letters
   */
  FASTO_KEY_LEFTBRACKET = '[',
  FASTO_KEY_BACKSLASH = '\\',
  FASTO_KEY_RIGHTBRACKET = ']',
  FASTO_KEY_CARET = '^',
  FASTO_KEY_UNDERSCORE = '_',
  FASTO_KEY_BACKQUOTE = '`',
  FASTO_KEY_a = 'a',
  FASTO_KEY_b = 'b',
  FASTO_KEY_c = 'c',
  FASTO_KEY_d = 'd',
  FASTO_KEY_e = 'e',
  FASTO_KEY_f = 'f',
  FASTO_KEY_g = 'g',
  FASTO_KEY_h = 'h',
  FASTO_KEY_i = 'i',
  FASTO_KEY_j = 'j',
  FASTO_KEY_k = 'k',
  FASTO_KEY_l = 'l',
  FASTO_KEY_m = 'm',
  FASTO_KEY_n = 'n',
  FASTO_KEY_o = 'o',
  FASTO_KEY_p = 'p',
  FASTO_KEY_q = 'q',
  FASTO_KEY_r = 'r',
  FASTO_KEY_s = 's',
  FASTO_KEY_t = 't',
  FASTO_KEY_u = 'u',
  FASTO_KEY_v = 'v',
  FASTO_KEY_w = 'w',
  FASTO_KEY_x = 'x',
  FASTO_KEY_y = 'y',
  FASTO_KEY_z = 'z',

  FASTO_KEY_CAPSLOCK = SCANCODE_TO_KEYCODE(SCANCODE_CAPSLOCK),

  FASTO_KEY_F1 = SCANCODE_TO_KEYCODE(SCANCODE_F1),
  FASTO_KEY_F2 = SCANCODE_TO_KEYCODE(SCANCODE_F2),
  FASTO_KEY_F3 = SCANCODE_TO_KEYCODE(SCANCODE_F3),
  FASTO_KEY_F4 = SCANCODE_TO_KEYCODE(SCANCODE_F4),
  FASTO_KEY_F5 = SCANCODE_TO_KEYCODE(SCANCODE_F5),
  FASTO_KEY_F6 = SCANCODE_TO_KEYCODE(SCANCODE_F6),
  FASTO_KEY_F7 = SCANCODE_TO_KEYCODE(SCANCODE_F7),
  FASTO_KEY_F8 = SCANCODE_TO_KEYCODE(SCANCODE_F8),
  FASTO_KEY_F9 = SCANCODE_TO_KEYCODE(SCANCODE_F9),
  FASTO_KEY_F10 = SCANCODE_TO_KEYCODE(SCANCODE_F10),
  FASTO_KEY_F11 = SCANCODE_TO_KEYCODE(SCANCODE_F11),
  FASTO_KEY_F12 = SCANCODE_TO_KEYCODE(SCANCODE_F12),

  FASTO_KEY_PRINTSCREEN = SCANCODE_TO_KEYCODE(SCANCODE_PRINTSCREEN),
  FASTO_KEY_SCROLLLOCK = SCANCODE_TO_KEYCODE(SCANCODE_SCROLLLOCK),
  FASTO_KEY_PAUSE = SCANCODE_TO_KEYCODE(SCANCODE_PAUSE),
  FASTO_KEY_INSERT = SCANCODE_TO_KEYCODE(SCANCODE_INSERT),
  FASTO_KEY_HOME = SCANCODE_TO_KEYCODE(SCANCODE_HOME),
  FASTO_KEY_PAGEUP = SCANCODE_TO_KEYCODE(SCANCODE_PAGEUP),
  FASTO_KEY_DELETE = '\177',
  FASTO_KEY_END = SCANCODE_TO_KEYCODE(SCANCODE_END),
  FASTO_KEY_PAGEDOWN = SCANCODE_TO_KEYCODE(SCANCODE_PAGEDOWN),
  FASTO_KEY_RIGHT = SCANCODE_TO_KEYCODE(SCANCODE_RIGHT),
  FASTO_KEY_LEFT = SCANCODE_TO_KEYCODE(SCANCODE_LEFT),
  FASTO_KEY_DOWN = SCANCODE_TO_KEYCODE(SCANCODE_DOWN),
  FASTO_KEY_UP = SCANCODE_TO_KEYCODE(SCANCODE_UP),

  FASTO_KEY_NUMLOCKCLEAR = SCANCODE_TO_KEYCODE(SCANCODE_NUMLOCKCLEAR),
  FASTO_KEY_KP_DIVIDE = SCANCODE_TO_KEYCODE(SCANCODE_KP_DIVIDE),
  FASTO_KEY_KP_MULTIPLY = SCANCODE_TO_KEYCODE(SCANCODE_KP_MULTIPLY),
  FASTO_KEY_KP_MINUS = SCANCODE_TO_KEYCODE(SCANCODE_KP_MINUS),
  FASTO_KEY_KP_PLUS = SCANCODE_TO_KEYCODE(SCANCODE_KP_PLUS),
  FASTO_KEY_KP_ENTER = SCANCODE_TO_KEYCODE(SCANCODE_KP_ENTER),
  FASTO_KEY_KP_1 = SCANCODE_TO_KEYCODE(SCANCODE_KP_1),
  FASTO_KEY_KP_2 = SCANCODE_TO_KEYCODE(SCANCODE_KP_2),
  FASTO_KEY_KP_3 = SCANCODE_TO_KEYCODE(SCANCODE_KP_3),
  FASTO_KEY_KP_4 = SCANCODE_TO_KEYCODE(SCANCODE_KP_4),
  FASTO_KEY_KP_5 = SCANCODE_TO_KEYCODE(SCANCODE_KP_5),
  FASTO_KEY_KP_6 = SCANCODE_TO_KEYCODE(SCANCODE_KP_6),
  FASTO_KEY_KP_7 = SCANCODE_TO_KEYCODE(SCANCODE_KP_7),
  FASTO_KEY_KP_8 = SCANCODE_TO_KEYCODE(SCANCODE_KP_8),
  FASTO_KEY_KP_9 = SCANCODE_TO_KEYCODE(SCANCODE_KP_9),
  FASTO_KEY_KP_0 = SCANCODE_TO_KEYCODE(SCANCODE_KP_0),
  FASTO_KEY_KP_PERIOD = SCANCODE_TO_KEYCODE(SCANCODE_KP_PERIOD),

  FASTO_KEY_APPLICATION = SCANCODE_TO_KEYCODE(SCANCODE_APPLICATION),
  FASTO_KEY_POWER = SCANCODE_TO_KEYCODE(SCANCODE_POWER),
  FASTO_KEY_KP_EQUALS = SCANCODE_TO_KEYCODE(SCANCODE_KP_EQUALS),
  FASTO_KEY_F13 = SCANCODE_TO_KEYCODE(SCANCODE_F13),
  FASTO_KEY_F14 = SCANCODE_TO_KEYCODE(SCANCODE_F14),
  FASTO_KEY_F15 = SCANCODE_TO_KEYCODE(SCANCODE_F15),
  FASTO_KEY_F16 = SCANCODE_TO_KEYCODE(SCANCODE_F16),
  FASTO_KEY_F17 = SCANCODE_TO_KEYCODE(SCANCODE_F17),
  FASTO_KEY_F18 = SCANCODE_TO_KEYCODE(SCANCODE_F18),
  FASTO_KEY_F19 = SCANCODE_TO_KEYCODE(SCANCODE_F19),
  FASTO_KEY_F20 = SCANCODE_TO_KEYCODE(SCANCODE_F20),
  FASTO_KEY_F21 = SCANCODE_TO_KEYCODE(SCANCODE_F21),
  FASTO_KEY_F22 = SCANCODE_TO_KEYCODE(SCANCODE_F22),
  FASTO_KEY_F23 = SCANCODE_TO_KEYCODE(SCANCODE_F23),
  FASTO_KEY_F24 = SCANCODE_TO_KEYCODE(SCANCODE_F24),
  FASTO_KEY_EXECUTE = SCANCODE_TO_KEYCODE(SCANCODE_EXECUTE),
  FASTO_KEY_HELP = SCANCODE_TO_KEYCODE(SCANCODE_HELP),
  FASTO_KEY_MENU = SCANCODE_TO_KEYCODE(SCANCODE_MENU),
  FASTO_KEY_SELECT = SCANCODE_TO_KEYCODE(SCANCODE_SELECT),
  FASTO_KEY_STOP = SCANCODE_TO_KEYCODE(SCANCODE_STOP),
  FASTO_KEY_AGAIN = SCANCODE_TO_KEYCODE(SCANCODE_AGAIN),
  FASTO_KEY_UNDO = SCANCODE_TO_KEYCODE(SCANCODE_UNDO),
  FASTO_KEY_CUT = SCANCODE_TO_KEYCODE(SCANCODE_CUT),
  FASTO_KEY_COPY = SCANCODE_TO_KEYCODE(SCANCODE_COPY),
  FASTO_KEY_PASTE = SCANCODE_TO_KEYCODE(SCANCODE_PASTE),
  FASTO_KEY_FIND = SCANCODE_TO_KEYCODE(SCANCODE_FIND),
  FASTO_KEY_MUTE = SCANCODE_TO_KEYCODE(SCANCODE_MUTE),
  FASTO_KEY_VOLUMEUP = SCANCODE_TO_KEYCODE(SCANCODE_VOLUMEUP),
  FASTO_KEY_VOLUMEDOWN = SCANCODE_TO_KEYCODE(SCANCODE_VOLUMEDOWN),
  FASTO_KEY_KP_COMMA = SCANCODE_TO_KEYCODE(SCANCODE_KP_COMMA),
  FASTO_KEY_KP_EQUALSAS400 = SCANCODE_TO_KEYCODE(SCANCODE_KP_EQUALSAS400),

  FASTO_KEY_ALTERASE = SCANCODE_TO_KEYCODE(SCANCODE_ALTERASE),
  FASTO_KEY_SYSREQ = SCANCODE_TO_KEYCODE(SCANCODE_SYSREQ),
  FASTO_KEY_CANCEL = SCANCODE_TO_KEYCODE(SCANCODE_CANCEL),
  FASTO_KEY_CLEAR = SCANCODE_TO_KEYCODE(SCANCODE_CLEAR),
  FASTO_KEY_PRIOR = SCANCODE_TO_KEYCODE(SCANCODE_PRIOR),
  FASTO_KEY_RETURN2 = SCANCODE_TO_KEYCODE(SCANCODE_RETURN2),
  FASTO_KEY_SEPARATOR = SCANCODE_TO_KEYCODE(SCANCODE_SEPARATOR),
  FASTO_KEY_OUT = SCANCODE_TO_KEYCODE(SCANCODE_OUT),
  FASTO_KEY_OPER = SCANCODE_TO_KEYCODE(SCANCODE_OPER),
  FASTO_KEY_CLEARAGAIN = SCANCODE_TO_KEYCODE(SCANCODE_CLEARAGAIN),
  FASTO_KEY_CRSEL = SCANCODE_TO_KEYCODE(SCANCODE_CRSEL),
  FASTO_KEY_EXSEL = SCANCODE_TO_KEYCODE(SCANCODE_EXSEL),

  FASTO_KEY_KP_00 = SCANCODE_TO_KEYCODE(SCANCODE_KP_00),
  FASTO_KEY_KP_000 = SCANCODE_TO_KEYCODE(SCANCODE_KP_000),
  FASTO_KEY_THOUSANDSSEPARATOR = SCANCODE_TO_KEYCODE(SCANCODE_THOUSANDSSEPARATOR),
  FASTO_KEY_DECIMALSEPARATOR = SCANCODE_TO_KEYCODE(SCANCODE_DECIMALSEPARATOR),
  FASTO_KEY_CURRENCYUNIT = SCANCODE_TO_KEYCODE(SCANCODE_CURRENCYUNIT),
  FASTO_KEY_CURRENCYSUBUNIT = SCANCODE_TO_KEYCODE(SCANCODE_CURRENCYSUBUNIT),
  FASTO_KEY_KP_LEFTPAREN = SCANCODE_TO_KEYCODE(SCANCODE_KP_LEFTPAREN),
  FASTO_KEY_KP_RIGHTPAREN = SCANCODE_TO_KEYCODE(SCANCODE_KP_RIGHTPAREN),
  FASTO_KEY_KP_LEFTBRACE = SCANCODE_TO_KEYCODE(SCANCODE_KP_LEFTBRACE),
  FASTO_KEY_KP_RIGHTBRACE = SCANCODE_TO_KEYCODE(SCANCODE_KP_RIGHTBRACE),
  FASTO_KEY_KP_TAB = SCANCODE_TO_KEYCODE(SCANCODE_KP_TAB),
  FASTO_KEY_KP_BACKSPACE = SCANCODE_TO_KEYCODE(SCANCODE_KP_BACKSPACE),
  FASTO_KEY_KP_A = SCANCODE_TO_KEYCODE(SCANCODE_KP_A),
  FASTO_KEY_KP_B = SCANCODE_TO_KEYCODE(SCANCODE_KP_B),
  FASTO_KEY_KP_C = SCANCODE_TO_KEYCODE(SCANCODE_KP_C),
  FASTO_KEY_KP_D = SCANCODE_TO_KEYCODE(SCANCODE_KP_D),
  FASTO_KEY_KP_E = SCANCODE_TO_KEYCODE(SCANCODE_KP_E),
  FASTO_KEY_KP_F = SCANCODE_TO_KEYCODE(SCANCODE_KP_F),
  FASTO_KEY_KP_XOR = SCANCODE_TO_KEYCODE(SCANCODE_KP_XOR),
  FASTO_KEY_KP_POWER = SCANCODE_TO_KEYCODE(SCANCODE_KP_POWER),
  FASTO_KEY_KP_PERCENT = SCANCODE_TO_KEYCODE(SCANCODE_KP_PERCENT),
  FASTO_KEY_KP_LESS = SCANCODE_TO_KEYCODE(SCANCODE_KP_LESS),
  FASTO_KEY_KP_GREATER = SCANCODE_TO_KEYCODE(SCANCODE_KP_GREATER),
  FASTO_KEY_KP_AMPERSAND = SCANCODE_TO_KEYCODE(SCANCODE_KP_AMPERSAND),
  FASTO_KEY_KP_DBLAMPERSAND = SCANCODE_TO_KEYCODE(SCANCODE_KP_DBLAMPERSAND),
  FASTO_KEY_KP_VERTICALBAR = SCANCODE_TO_KEYCODE(SCANCODE_KP_VERTICALBAR),
  FASTO_KEY_KP_DBLVERTICALBAR = SCANCODE_TO_KEYCODE(SCANCODE_KP_DBLVERTICALBAR),
  FASTO_KEY_KP_COLON = SCANCODE_TO_KEYCODE(SCANCODE_KP_COLON),
  FASTO_KEY_KP_HASH = SCANCODE_TO_KEYCODE(SCANCODE_KP_HASH),
  FASTO_KEY_KP_SPACE = SCANCODE_TO_KEYCODE(SCANCODE_KP_SPACE),
  FASTO_KEY_KP_AT = SCANCODE_TO_KEYCODE(SCANCODE_KP_AT),
  FASTO_KEY_KP_EXCLAM = SCANCODE_TO_KEYCODE(SCANCODE_KP_EXCLAM),
  FASTO_KEY_KP_MEMSTORE = SCANCODE_TO_KEYCODE(SCANCODE_KP_MEMSTORE),
  FASTO_KEY_KP_MEMRECALL = SCANCODE_TO_KEYCODE(SCANCODE_KP_MEMRECALL),
  FASTO_KEY_KP_MEMCLEAR = SCANCODE_TO_KEYCODE(SCANCODE_KP_MEMCLEAR),
  FASTO_KEY_KP_MEMADD = SCANCODE_TO_KEYCODE(SCANCODE_KP_MEMADD),
  FASTO_KEY_KP_MEMSUBTRACT = SCANCODE_TO_KEYCODE(SCANCODE_KP_MEMSUBTRACT),
  FASTO_KEY_KP_MEMMULTIPLY = SCANCODE_TO_KEYCODE(SCANCODE_KP_MEMMULTIPLY),
  FASTO_KEY_KP_MEMDIVIDE = SCANCODE_TO_KEYCODE(SCANCODE_KP_MEMDIVIDE),
  FASTO_KEY_KP_PLUSMINUS = SCANCODE_TO_KEYCODE(SCANCODE_KP_PLUSMINUS),
  FASTO_KEY_KP_CLEAR = SCANCODE_TO_KEYCODE(SCANCODE_KP_CLEAR),
  FASTO_KEY_KP_CLEARENTRY = SCANCODE_TO_KEYCODE(SCANCODE_KP_CLEARENTRY),
  FASTO_KEY_KP_BINARY = SCANCODE_TO_KEYCODE(SCANCODE_KP_BINARY),
  FASTO_KEY_KP_OCTAL = SCANCODE_TO_KEYCODE(SCANCODE_KP_OCTAL),
  FASTO_KEY_KP_DECIMAL = SCANCODE_TO_KEYCODE(SCANCODE_KP_DECIMAL),
  FASTO_KEY_KP_HEXADECIMAL = SCANCODE_TO_KEYCODE(SCANCODE_KP_HEXADECIMAL),

  FASTO_KEY_LCTRL = SCANCODE_TO_KEYCODE(SCANCODE_LCTRL),
  FASTO_KEY_LSHIFT = SCANCODE_TO_KEYCODE(SCANCODE_LSHIFT),
  FASTO_KEY_LALT = SCANCODE_TO_KEYCODE(SCANCODE_LALT),
  FASTO_KEY_LGUI = SCANCODE_TO_KEYCODE(SCANCODE_LGUI),
  FASTO_KEY_RCTRL = SCANCODE_TO_KEYCODE(SCANCODE_RCTRL),
  FASTO_KEY_RSHIFT = SCANCODE_TO_KEYCODE(SCANCODE_RSHIFT),
  FASTO_KEY_RALT = SCANCODE_TO_KEYCODE(SCANCODE_RALT),
  FASTO_KEY_RGUI = SCANCODE_TO_KEYCODE(SCANCODE_RGUI),

  FASTO_KEY_MODE = SCANCODE_TO_KEYCODE(SCANCODE_MODE),

  FASTO_KEY_AUDIONEXT = SCANCODE_TO_KEYCODE(SCANCODE_AUDIONEXT),
  FASTO_KEY_AUDIOPREV = SCANCODE_TO_KEYCODE(SCANCODE_AUDIOPREV),
  FASTO_KEY_AUDIOSTOP = SCANCODE_TO_KEYCODE(SCANCODE_AUDIOSTOP),
  FASTO_KEY_AUDIOPLAY = SCANCODE_TO_KEYCODE(SCANCODE_AUDIOPLAY),
  FASTO_KEY_AUDIOMUTE = SCANCODE_TO_KEYCODE(SCANCODE_AUDIOMUTE),
  FASTO_KEY_MEDIASELECT = SCANCODE_TO_KEYCODE(SCANCODE_MEDIASELECT),
  FASTO_KEY_WWW = SCANCODE_TO_KEYCODE(SCANCODE_WWW),
  FASTO_KEY_MAIL = SCANCODE_TO_KEYCODE(SCANCODE_MAIL),
  FASTO_KEY_CALCULATOR = SCANCODE_TO_KEYCODE(SCANCODE_CALCULATOR),
  FASTO_KEY_COMPUTER = SCANCODE_TO_KEYCODE(SCANCODE_COMPUTER),
  FASTO_KEY_AC_SEARCH = SCANCODE_TO_KEYCODE(SCANCODE_AC_SEARCH),
  FASTO_KEY_AC_HOME = SCANCODE_TO_KEYCODE(SCANCODE_AC_HOME),
  FASTO_KEY_AC_BACK = SCANCODE_TO_KEYCODE(SCANCODE_AC_BACK),
  FASTO_KEY_AC_FORWARD = SCANCODE_TO_KEYCODE(SCANCODE_AC_FORWARD),
  FASTO_KEY_AC_STOP = SCANCODE_TO_KEYCODE(SCANCODE_AC_STOP),
  FASTO_KEY_AC_REFRESH = SCANCODE_TO_KEYCODE(SCANCODE_AC_REFRESH),
  FASTO_KEY_AC_BOOKMARKS = SCANCODE_TO_KEYCODE(SCANCODE_AC_BOOKMARKS),

  FASTO_KEY_BRIGHTNESSDOWN = SCANCODE_TO_KEYCODE(SCANCODE_BRIGHTNESSDOWN),
  FASTO_KEY_BRIGHTNESSUP = SCANCODE_TO_KEYCODE(SCANCODE_BRIGHTNESSUP),
  FASTO_KEY_DISPLAYSWITCH = SCANCODE_TO_KEYCODE(SCANCODE_DISPLAYSWITCH),
  FASTO_KEY_KBDILLUMTOGGLE = SCANCODE_TO_KEYCODE(SCANCODE_KBDILLUMTOGGLE),
  FASTO_KEY_KBDILLUMDOWN = SCANCODE_TO_KEYCODE(SCANCODE_KBDILLUMDOWN),
  FASTO_KEY_KBDILLUMUP = SCANCODE_TO_KEYCODE(SCANCODE_KBDILLUMUP),
  FASTO_KEY_EJECT = SCANCODE_TO_KEYCODE(SCANCODE_EJECT),
  FASTO_KEY_SLEEP = SCANCODE_TO_KEYCODE(SCANCODE_SLEEP)
};

typedef int32_t Keycode;

/**
 * \brief Enumeration of valid key mods (possibly OR'd together).
 */
enum Keymod {
  FASTO_KEY_MOD_NONE = 0x0000,
  FASTO_KEY_MOD_LSHIFT = 0x0001,
  FASTO_KEY_MOD_RSHIFT = 0x0002,
  FASTO_KEY_MOD_LCTRL = 0x0040,
  FASTO_KEY_MOD_RCTRL = 0x0080,
  FASTO_KEY_MOD_LALT = 0x0100,
  FASTO_KEY_MOD_RALT = 0x0200,
  FASTO_KEY_MOD_LGUI = 0x0400,
  FASTO_KEY_MOD_RGUI = 0x0800,
  FASTO_KEY_MOD_NUM = 0x1000,
  FASTO_KEY_MOD_CAPS = 0x2000,
  FASTO_KEY_MOD_MODE = 0x4000,
  FASTO_KEY_MOD_RESERVED = 0x8000
};

#define FASTO_KEY_MOD_CTRL (FASTO_KEY_MOD_LCTRL | FASTO_KEY_MOD_RCTRL)
#define FASTO_KEY_MOD_SHIFT (FASTO_KEY_MOD_LSHIFT | FASTO_KEY_MOD_RSHIFT)
#define FASTO_KEY_MOD_ALT (FASTO_KEY_MOD_LALT | FASTO_KEY_MOD_RALT)
#define FASTO_KEY_MOD_GUI (FASTO_KEY_MOD_LGUI | FASTO_KEY_MOD_RGUI)

struct Keysym {
  Scancode scancode;
  Keycode sym;
  uint16_t mod;
};

namespace fasto {
namespace fastotv {
namespace core {
namespace events {

struct KeyPressInfo {
  KeyPressInfo(bool pressed, Keysym ks);

  bool is_pressed;
  Keysym ks;
};
struct KeyReleaseInfo {
  KeyReleaseInfo(bool pressed, Keysym ks);

  bool is_pressed;
  Keysym ks;
};

typedef EventBase<KEY_PRESS_EVENT, KeyPressInfo> KeyPressEvent;
typedef EventBase<KEY_RELEASE_EVENT, KeyReleaseInfo> KeyReleaseEvent;

}  // namespace events {
}
}
}
