SET(SOURCE_ROOT ${CMAKE_SOURCE_DIR}/src)

# User specific
SET(USER_LOGIN anon@fastogt.com CACHE STRING "User login")
SET(USER_PASSWORD 2ae66f90b7788ab8950e8f81b829c947 CACHE STRING "User password for ${USER_LOGIN}")
SET(USER_DEVICE_ID 5971d32fc976287338c015c0 CACHE STRING "User device for ${USER_LOGIN}")

ADD_DEFINITIONS(-DUSER_LOGIN="${USER_LOGIN}"
  -DUSER_PASSWORD="${USER_PASSWORD}"
  -DUSER_DEVICE_ID="${USER_DEVICE_ID}"

  -DPROJECT_SERVER_HOST="${PROJECT_SERVER_HOST}"
  -DPROJECT_SERVER_PORT=${PROJECT_SERVER_PORT}
  -DUNKNOWN_ICON_URI="https://fastotv.com/images/unknown_channel.png"
)

IF(DEVELOPER_ENABLE_TESTS)
  ADD_DEFINITIONS(-DPROJECT_TEST_SOURCES_DIR="${CMAKE_SOURCE_DIR}/tests")
  IF(DEVELOPER_ENABLE_UNIT_TESTS)
    FIND_PACKAGE(GTest REQUIRED)
  ENDIF(DEVELOPER_ENABLE_UNIT_TESTS)
ENDIF(DEVELOPER_ENABLE_TESTS)

#module
SET(PROJECT_CLIENT_SERVER_LIBRARY ${PROJECT_NAME_LOWERCASE}_client_server)

SET(HEADERS_COMMANDS
  ${SOURCE_ROOT}/commands/commands.h
)

SET(SOURCES_COMMANDS
  ${SOURCE_ROOT}/commands/commands.cpp
)

SET(HEADERS_PROTOCOL
  ${SOURCE_ROOT}/protocol/protocol.h
  ${SOURCE_ROOT}/protocol/types.h
)

SET(SOURCES_PROTOCOL
  ${SOURCE_ROOT}/protocol/protocol.cpp
  ${SOURCE_ROOT}/protocol/types.cpp
)

SET(CLIENT_SERVER_COMMANDS_INFO_HEADERS
  ${SOURCE_ROOT}/commands_info/auth_info.h
  ${SOURCE_ROOT}/commands_info/server_info.h
  ${SOURCE_ROOT}/commands_info/client_info.h
  ${SOURCE_ROOT}/commands_info/channel_info.h
  ${SOURCE_ROOT}/commands_info/epg_info.h
  ${SOURCE_ROOT}/commands_info/programme_info.h
  ${SOURCE_ROOT}/commands_info/ping_info.h
  ${SOURCE_ROOT}/commands_info/channels_info.h
  ${SOURCE_ROOT}/commands_info/runtime_channel_info.h
)
SET(CLIENT_SERVER_COMMANDS_INFO_SOURCES
  ${SOURCE_ROOT}/commands_info/auth_info.cpp
  ${SOURCE_ROOT}/commands_info/server_info.cpp
  ${SOURCE_ROOT}/commands_info/client_info.cpp
  ${SOURCE_ROOT}/commands_info/channel_info.cpp
  ${SOURCE_ROOT}/commands_info/epg_info.cpp
  ${SOURCE_ROOT}/commands_info/programme_info.cpp
  ${SOURCE_ROOT}/commands_info/ping_info.cpp
  ${SOURCE_ROOT}/commands_info/channels_info.cpp
  ${SOURCE_ROOT}/commands_info/runtime_channel_info.cpp
)

SET(CLIENT_SERVER_SOURCES
  ${SOURCE_ROOT}/client_server_types.h
  ${SOURCE_ROOT}/client_server_types.cpp
  ${SOURCE_ROOT}/client.h
  ${SOURCE_ROOT}/client.cpp
) # server and client common sources

SET(CLIENT_SERVER_SOURCES
  ${HEADERS_COMMANDS} ${SOURCES_COMMANDS} ${HEADERS_PROTOCOL} ${SOURCES_PROTOCOL}
  ${HEADERS_SERIALIZER} ${SOURCES_SERIALIZER}
  ${CLIENT_SERVER_SOURCES}

  ${CLIENT_SERVER_COMMANDS_INFO_HEADERS}
  ${CLIENT_SERVER_COMMANDS_INFO_SOURCES}
)

SET(PRIVATE_INCLUDE_DIRECTORIES_CLIENT_SERVER
  ${SOURCE_ROOT}
)

SET(CLIENT_SERVER_LIBRARIES ${CLIENT_SERVER_LIBRARIES} ${ZLIB_LIBRARIES})
ADD_LIBRARY(${PROJECT_CLIENT_SERVER_LIBRARY} STATIC ${CLIENT_SERVER_SOURCES})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_CLIENT_SERVER_LIBRARY} PRIVATE ${PRIVATE_INCLUDE_DIRECTORIES_CLIENT_SERVER})
TARGET_LINK_LIBRARIES(${PROJECT_CLIENT_SERVER_LIBRARY} ${CLIENT_SERVER_LIBRARIES})

ADD_SUBDIRECTORY(client)

IF (DEVELOPER_CHECK_STYLE)
  SET(CHECK_SOURCES_CLIENT_SERVER
    ${CLIENT_SERVER_SOURCES}
  )
  REGISTER_CHECK_STYLE_TARGET(check_style_client_server "${CHECK_SOURCES_CLIENT_SERVER}")
  REGISTER_CHECK_INCLUDES_TARGET(${PROJECT_CLIENT_SERVER_LIBRARY})
ENDIF(DEVELOPER_CHECK_STYLE)

IF(DEVELOPER_ENABLE_TESTS)
  IF(DEVELOPER_ENABLE_UNIT_TESTS)
    FIND_PACKAGE(Common REQUIRED)
    FIND_PACKAGE(JSON-C REQUIRED)
    SET(PROJECT_UNIT_TEST unit_tests)
    SET(PRIVATE_INCLUDE_DIRECTORIES_TEST
      ${gtest_SOURCE_DIR}/include ${gtest_SOURCE_DIR} ${SOURCE_ROOT} ${COMMON_INCLUDE_DIRS} ${JSONC_INCLUDE_DIRS}
    )
    ADD_EXECUTABLE(${PROJECT_UNIT_TEST}
      ${CMAKE_SOURCE_DIR}/tests/unit_tests/test_serializer.cpp
    )
    TARGET_INCLUDE_DIRECTORIES(${PROJECT_UNIT_TEST} PRIVATE ${PRIVATE_INCLUDE_DIRECTORIES_TEST} ${JSONC_INCLUDE_DIRS})
    TARGET_LINK_LIBRARIES(${PROJECT_UNIT_TEST}
      gtest gtest_main
      ${PROJECT_CLIENT_SERVER_LIBRARY}
      ${COMMON_BASE_LIBRARY}
      ${JSONC_LIBRARIES}
      pthread
    )
    ADD_TEST_TARGET(${PROJECT_UNIT_TEST})
    SET_PROPERTY(TARGET ${PROJECT_UNIT_TEST} PROPERTY FOLDER "Unit tests")
  ENDIF(DEVELOPER_ENABLE_UNIT_TESTS)
ENDIF(DEVELOPER_ENABLE_TESTS)
