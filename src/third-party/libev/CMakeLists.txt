CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0)
PROJECT(libev C)

IF(OS_WINDOWS)
    SET(CONFIG_IN config_win.h.in)
ELSEIF(OS_MACOSX)
    SET(CONFIG_IN config_macos.h.in)
ELSEIF(OS_LINUX)
    SET(CONFIG_IN config_linux.h.in)
ELSEIF(OS_FREEBSD)
    SET(CONFIG_IN config_freebsd.h.in)
ELSEIF(OS_ANDROID)
    SET(CONFIG_IN config_android.h.in)
ELSE()
    MESSAGE(FATAL_ERROR "Not have config.in: ${CMAKE_SYSTEM_NAME}")
ENDIF(OS_WINDOWS)

CONFIGURE_FILE(${CONFIG_IN} ${CMAKE_CURRENT_LIST_DIR}/src/config.h @ONLY IMMEDIATE)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/src)

SET(HEADERS_EV
    ${CMAKE_CURRENT_LIST_DIR}/src/config.h
    src/ev.h
)

SET(SOURCES_EV
    src/ev.c
)

SET(LIBS_EV

)

ADD_LIBRARY(${PROJECT_NAME} STATIC ${HEADERS_EV} ${SOURCES_EV})
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${LIBS_EV})
